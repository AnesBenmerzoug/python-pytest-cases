<?xml version="1.0" encoding="utf-8"?><testsuite errors="2" failures="0" name="pytest" skips="0" tests="106" time="0.891"><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="45" name="test_a[case_1]" time="0.002730131149291992"><system-out>loading file file1
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="45" name="test_a[case_2]" time="0.0017282962799072266"><system-out>loading file file2
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="55" name="test_b[case_2]" time="0.0013339519500732422"></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="55" name="test_b[case_3]" time="0.001760244369506836"><system-out>loading file file3
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="65" name="test_c[case_1]" time="0.0016086101531982422"></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="65" name="test_c[case_2]" time="0.0017533302307128906"></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="65" name="test_c[case_3]" time="0.002125263214111328"></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="75" name="test_assert_parametrized" time="0.0008749961853027344"></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="19" name="test_a[case 0]" time="0.001772165298461914"><system-out>generating case 0
0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="19" name="test_a[case 1]" time="0.0017666816711425781"><system-out>generating case 1
1
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="19" name="test_a[case 2]" time="0.0017805099487304688"><system-out>generating case 2
2
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="29" name="test_b[case 0]" time="0.001043558120727539"><system-out>0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="29" name="test_b[case 1]" time="0.00115203857421875"><system-out>1
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="29" name="test_b[case 2]" time="0.0017800331115722656"><system-out>2
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="39" name="test_assert_cases_are_here" time="0.0018076896667480469"></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="46" name="test_assert_parametrized" time="0.0018987655639648438"></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[1.0.0-case_simple]" time="0.002202272415161133"><system-out>using version 1.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[1.0.0-case_simple2]" time="0.002154827117919922"><system-out>using version 1.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[1.0.0-gen case i=0, j=0]" time="0.001173257827758789"><system-out>using version 1.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[1.0.0-gen case i=0, j=1]" time="0.0017914772033691406"><system-out>using version 1.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[1.0.0-gen case i=1, j=0]" time="0.001954317092895508"><system-out>using version 1.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[1.0.0-gen case i=1, j=1]" time="0.0020956993103027344"><system-out>using version 1.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[2.0.0-case_simple]" time="0.0011820793151855469"><system-out>using version 2.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[2.0.0-case_simple2]" time="0.0019197463989257812"><system-out>using version 2.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[2.0.0-gen case i=0, j=0]" time="0.0027213096618652344"><system-out>using version 2.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[2.0.0-gen case i=0, j=1]" time="0.002160310745239258"><system-out>using version 2.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[2.0.0-gen case i=1, j=0]" time="0.0019774436950683594"><system-out>using version 2.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[2.0.0-gen case i=1, j=1]" time="0.002017498016357422"><system-out>using version 2.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="57" name="test_assert_parametrized" time="0.0010251998901367188"></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="22" name="test_with_cases_decorated[case_simple]" time="0.001592397689819336"></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="35" name="test_with_cases_decorated2[case_simple]" time="0.0018641948699951172"></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="35" name="test_with_cases_decorated2[case_simple2]" time="0.002053976058959961"></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="83" name="test_a[case_1]" time="0.0012030601501464844"><system-out>loading file file1
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="83" name="test_a[case_2]" time="0.001230001449584961"><system-out>loading file file2
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="93" name="test_b[case_2]" time="0.0013496875762939453"></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="93" name="test_b[case_3]" time="0.001401662826538086"><system-out>loading file file3
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="103" name="test_c[case_1]" time="0.0015408992767333984"></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="103" name="test_c[case_2]" time="0.0016298294067382812"></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="103" name="test_c[case_3]" time="0.0016601085662841797"></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_parametrized_cases" file="pytest_cases/tests/advanced/test_suite_parametrized_cases.py" line="61" name="test_suite_parametrized_cases[case_simple-step_check_a]" time="0.002501249313354492"><system-out>{&apos;a&apos;: 1, &apos;b&apos;: 2}
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_parametrized_cases" file="pytest_cases/tests/advanced/test_suite_parametrized_cases.py" line="61" name="test_suite_parametrized_cases[case_simple-step_check_b]" time="0.0051937103271484375"><system-out>{&apos;a&apos;: 1, &apos;b&apos;: 2}
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_parametrized_cases" file="pytest_cases/tests/advanced/test_suite_parametrized_cases.py" line="61" name="test_suite_parametrized_cases[case_simple2-step_check_a]" time="0.0027227401733398438"><system-out>{&apos;a&apos;: -1, &apos;b&apos;: 2}
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_parametrized_cases" file="pytest_cases/tests/advanced/test_suite_parametrized_cases.py" line="61" name="test_suite_parametrized_cases[case_simple2-step_check_b]" time="0.0030622482299804688"><system-out>{&apos;a&apos;: -1, &apos;b&apos;: 2}
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_shared_dict_cases" file="pytest_cases/tests/advanced/test_suite_shared_dict_cases.py" line="47" name="test_suite_shared_dict_cases[case_simple-step_check_a]" time="0.002455472946166992"><system-out>{&apos;a&apos;: 1, &apos;b&apos;: 2}
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_shared_dict_cases" file="pytest_cases/tests/advanced/test_suite_shared_dict_cases.py" line="47" name="test_suite_shared_dict_cases[case_simple-step_check_b]" time="0.002642393112182617"><system-out>{&apos;a&apos;: 1, &apos;b&apos;: 2}
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_shared_dict_cases" file="pytest_cases/tests/advanced/test_suite_shared_dict_cases.py" line="47" name="test_suite_shared_dict_cases[case_simple2-step_check_a]" time="0.002597808837890625"><system-out>{&apos;a&apos;: -1, &apos;b&apos;: 2}
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_shared_dict_cases" file="pytest_cases/tests/advanced/test_suite_shared_dict_cases.py" line="47" name="test_suite_shared_dict_cases[case_simple2-step_check_b]" time="0.0023012161254882812"><system-out>{&apos;a&apos;: -1, &apos;b&apos;: 2}
</system-out></testcase><testcase classname="pytest_cases.tests.intermediate.test_filtering" file="pytest_cases/tests/intermediate/test_filtering.py" line="25" name="test_with_cases_a_or_b[case_a_and_b]" time="0.002388477325439453"></testcase><testcase classname="pytest_cases.tests.intermediate.test_filtering" file="pytest_cases/tests/intermediate/test_filtering.py" line="25" name="test_with_cases_a_or_b[case_a]" time="0.0012695789337158203"></testcase><testcase classname="pytest_cases.tests.intermediate.test_filtering" file="pytest_cases/tests/intermediate/test_filtering.py" line="38" name="test_with_cases_a_and_b[case_a_and_b]" time="0.0019741058349609375"></testcase><testcase classname="pytest_cases.tests.intermediate.test_shared" file="pytest_cases/tests/intermediate/test_shared.py" line="8" name="test_with_filter[case_for_function1]" time="0.0021178722381591797"></testcase><testcase classname="pytest_cases.tests.intermediate.test_shared" file="pytest_cases/tests/intermediate/test_shared.py" line="8" name="test_with_filter[case_for_function_1_and_2]" time="0.0008039474487304688"></testcase><testcase classname="pytest_cases.tests.intermediate.test_shared" file="pytest_cases/tests/intermediate/test_shared.py" line="21" name="test_with_filter2[case_for_function2]" time="0.001085519790649414"></testcase><testcase classname="pytest_cases.tests.intermediate.test_shared" file="pytest_cases/tests/intermediate/test_shared.py" line="21" name="test_with_filter2[case_for_function_1_and_2]" time="0.001264810562133789"></testcase><testcase classname="pytest_cases.tests.intermediate.test_shared" file="pytest_cases/tests/intermediate/test_shared.py" line="34" name="test_with_no_filter_all_cases[case_for_function1]" time="0.0029785633087158203"></testcase><testcase classname="pytest_cases.tests.intermediate.test_shared" file="pytest_cases/tests/intermediate/test_shared.py" line="34" name="test_with_no_filter_all_cases[case_for_function2]" time="0.002048015594482422"></testcase><testcase classname="pytest_cases.tests.intermediate.test_shared" file="pytest_cases/tests/intermediate/test_shared.py" line="34" name="test_with_no_filter_all_cases[case_for_function_1_and_2]" time="0.002206087112426758"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_simple]" time="0.0017056465148925781"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[Simplest]" time="0.0011944770812988281"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_simple_error_type]" time="0.001954317092895508"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_simple_error_instance]" time="0.001592874526977539"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_simple_error_callable]" time="0.0015151500701904297"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_for_function1]" time="0.0011715888977050781"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_for_function2]" time="0.0014984607696533203"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_for_function_1_and_2]" time="0.0015816688537597656"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="14" name="test_with_cases_decorated_legacy[case_simple]" time="0.002467632293701172"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="14" name="test_with_cases_decorated_legacy[Simplest]" time="0.0019762516021728516"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="14" name="test_with_cases_decorated_legacy[case_simple_error_type]" time="0.002103567123413086"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="14" name="test_with_cases_decorated_legacy[case_simple_error_instance]" time="0.0015430450439453125"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="14" name="test_with_cases_decorated_legacy[case_simple_error_callable]" time="0.0020606517791748047"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="51" name="test_with_cases_decorated[case_simple]" time="0.0020906925201416016"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="51" name="test_with_cases_decorated[Simplest]" time="0.0018529891967773438"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="51" name="test_with_cases_decorated[case_simple_error_type]" time="0.0019867420196533203"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="51" name="test_with_cases_decorated[case_simple_error_instance]" time="0.0019690990447998047"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="51" name="test_with_cases_decorated[case_simple_error_callable]" time="0.0015666484832763672"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="33" name="test_with_cases_decorated[case_simple]" time="0.0013546943664550781"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="33" name="test_with_cases_decorated[test with i=0, j=0]" time="0.001470327377319336"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="33" name="test_with_cases_decorated[test with i=0, j=1]" time="0.0014638900756835938"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="33" name="test_with_cases_decorated[test with i=0, j=2]" time="0.0015325546264648438"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="33" name="test_with_cases_decorated[test with i=1, j=0]" time="0.003010988235473633"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="33" name="test_with_cases_decorated[test with i=1, j=1]" time="0.001165628433227539"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="33" name="test_with_cases_decorated[test with i=1, j=2]" time="0.0012035369873046875"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="8" name="test_with_cases_decorated[case_simple]" time="0.0014865398406982422"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="8" name="test_with_cases_decorated[Simplest]" time="0.0014514923095703125"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="8" name="test_with_cases_decorated[case_simple_error_type]" time="0.0010173320770263672"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="8" name="test_with_cases_decorated[case_simple_error_instance]" time="0.0015802383422851562"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="8" name="test_with_cases_decorated[case_simple_error_callable]" time="0.0015993118286132812"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="44" name="test_with_cases_manual[case_simple]" time="0.0012519359588623047"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="44" name="test_with_cases_manual[Simplest]" time="0.001537322998046875"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="44" name="test_with_cases_manual[case_simple_error_type]" time="0.001493692398071289"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="44" name="test_with_cases_manual[case_simple_error_instance]" time="0.001538991928100586"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="44" name="test_with_cases_manual[case_simple_error_callable]" time="0.0015842914581298828"></testcase><testcase classname="pytest_cases.tests.simple.test_same_file" file="pytest_cases/tests/simple/test_same_file.py" line="23" name="test_with_cases_decorated[case_simple]" time="0.0015819072723388672"></testcase><testcase classname="pytest_cases.tests.simple.test_same_file" file="pytest_cases/tests/simple/test_same_file.py" line="23" name="test_with_cases_decorated[case_simple2]" time="0.0014026165008544922"></testcase><testcase classname="pytest_cases.tests.simple.test_stereo_fixtures" file="pytest_cases/tests/simple/test_stereo_fixtures.py" line="50" name="test_stereo[stereo 1.wav-list]" time="0.0017547607421875"></testcase><testcase classname="pytest_cases.tests.simple.test_stereo_fixtures" file="pytest_cases/tests/simple/test_stereo_fixtures.py" line="50" name="test_stereo[stereo 1.wav-dict]" time="0.0034928321838378906"><error message="test setup failure">path = &apos;stereo 1.wav&apos;, cfg_factory = &lt;class &apos;dict&apos;&gt;
request = &lt;SubRequest &apos;stereo_cfg&apos; for &lt;Function &apos;test_stereo[stereo 1.wav-dict]&apos;&gt;&gt;

    @pytest_fixture_plus
    @pytest.mark.parametrize(&quot;path&quot;, STEREO_PATHS)
    @pytest.mark.parametrize(&quot;cfg_factory&quot;, CFG_TYPES)   # not actual params
    def stereo_cfg(path, cfg_factory, request):
        &quot;&quot;&quot;
        A fixture with two parameters
        &quot;&quot;&quot;
        assert isinstance(path, str)
        assert isinstance(cfg_factory, type)
&gt;       a.assert_state_and_move(path=path, cfg_factory=cfg_factory)

pytest_cases/tests/simple/test_stereo_fixtures.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;pytest_cases.tests.simple.test_stereo_fixtures.StateAsserter object at 0x7ffbafa0c0f0&gt;
path = &apos;stereo 1.wav&apos;, cfg_factory = &lt;class &apos;dict&apos;&gt;

    def assert_state_and_move(self, path, cfg_factory):
&gt;       assert path == STEREO_PATHS[self.current_state % 2]
E       AssertionError: assert &apos;stereo 1.wav&apos; == &apos;stereo 2.wav&apos;
E         - stereo 1.wav
E         ?        ^
E         + stereo 2.wav
E         ?        ^

pytest_cases/tests/simple/test_stereo_fixtures.py:18: AssertionError</error></testcase><testcase classname="pytest_cases.tests.simple.test_stereo_fixtures" file="pytest_cases/tests/simple/test_stereo_fixtures.py" line="50" name="test_stereo[stereo 2.wav-list]" time="0.002320528030395508"></testcase><testcase classname="pytest_cases.tests.simple.test_stereo_fixtures" file="pytest_cases/tests/simple/test_stereo_fixtures.py" line="50" name="test_stereo[stereo 2.wav-dict]" time="0.002370119094848633"><error message="test setup failure">path = &apos;stereo 2.wav&apos;, cfg_factory = &lt;class &apos;dict&apos;&gt;
request = &lt;SubRequest &apos;stereo_cfg&apos; for &lt;Function &apos;test_stereo[stereo 2.wav-dict]&apos;&gt;&gt;

    @pytest_fixture_plus
    @pytest.mark.parametrize(&quot;path&quot;, STEREO_PATHS)
    @pytest.mark.parametrize(&quot;cfg_factory&quot;, CFG_TYPES)   # not actual params
    def stereo_cfg(path, cfg_factory, request):
        &quot;&quot;&quot;
        A fixture with two parameters
        &quot;&quot;&quot;
        assert isinstance(path, str)
        assert isinstance(cfg_factory, type)
&gt;       a.assert_state_and_move(path=path, cfg_factory=cfg_factory)

pytest_cases/tests/simple/test_stereo_fixtures.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;pytest_cases.tests.simple.test_stereo_fixtures.StateAsserter object at 0x7ffbafa0c0f0&gt;
path = &apos;stereo 2.wav&apos;, cfg_factory = &lt;class &apos;dict&apos;&gt;

    def assert_state_and_move(self, path, cfg_factory):
&gt;       assert path == STEREO_PATHS[self.current_state % 2]
E       AssertionError: assert &apos;stereo 2.wav&apos; == &apos;stereo 1.wav&apos;
E         - stereo 2.wav
E         ?        ^
E         + stereo 1.wav
E         ?        ^

pytest_cases/tests/simple/test_stereo_fixtures.py:18: AssertionError</error></testcase><testcase classname="pytest_cases.tests.simple.test_stereo_fixtures" file="pytest_cases/tests/simple/test_stereo_fixtures.py" line="63" name="test_reference_test[list-stereo 1.wav]" time="0.0017743110656738281"></testcase><testcase classname="pytest_cases.tests.simple.test_stereo_fixtures" file="pytest_cases/tests/simple/test_stereo_fixtures.py" line="63" name="test_reference_test[list-stereo 2.wav]" time="0.0017046928405761719"></testcase><testcase classname="pytest_cases.tests.simple.test_stereo_fixtures" file="pytest_cases/tests/simple/test_stereo_fixtures.py" line="63" name="test_reference_test[dict-stereo 1.wav]" time="0.0018494129180908203"></testcase><testcase classname="pytest_cases.tests.simple.test_stereo_fixtures" file="pytest_cases/tests/simple/test_stereo_fixtures.py" line="63" name="test_reference_test[dict-stereo 2.wav]" time="0.0019047260284423828"></testcase><testcase classname="pytest_cases.tests.simple.test_stereo_fixtures" file="pytest_cases/tests/simple/test_stereo_fixtures.py" line="94" name="test_stereo_2[list-stereo 1.wav]" time="0.0018160343170166016"></testcase><testcase classname="pytest_cases.tests.simple.test_stereo_fixtures" file="pytest_cases/tests/simple/test_stereo_fixtures.py" line="94" name="test_stereo_2[list-stereo 2.wav]" time="0.0019097328186035156"></testcase><testcase classname="pytest_cases.tests.simple.test_stereo_fixtures" file="pytest_cases/tests/simple/test_stereo_fixtures.py" line="94" name="test_stereo_2[dict-stereo 1.wav]" time="0.001672506332397461"></testcase><testcase classname="pytest_cases.tests.simple.test_stereo_fixtures" file="pytest_cases/tests/simple/test_stereo_fixtures.py" line="94" name="test_stereo_2[dict-stereo 2.wav]" time="0.0021829605102539062"></testcase></testsuite>