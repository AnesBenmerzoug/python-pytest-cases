<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="5" tests="132" time="0.612"><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="45" name="test_a[case_1]" time="0.003254413604736328"><system-out>loading file file1
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="45" name="test_a[case_2]" time="0.0008883476257324219"><system-out>loading file file2
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="55" name="test_b[case_2]" time="0.0007386207580566406"></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="55" name="test_b[case_3]" time="0.0008630752563476562"><system-out>loading file file3
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="65" name="test_c[case_1]" time="0.0007765293121337891"></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="65" name="test_c[case_2]" time="0.0007877349853515625"></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="65" name="test_c[case_3]" time="0.0010409355163574219"></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize" file="pytest_cases/tests/advanced/test_memoize.py" line="75" name="test_assert_parametrized" time="0.0006840229034423828"></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="19" name="test_a[case 0]" time="0.0008635520935058594"><system-out>generating case 0
0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="19" name="test_a[case 1]" time="0.0008606910705566406"><system-out>generating case 1
1
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="19" name="test_a[case 2]" time="0.0008394718170166016"><system-out>generating case 2
2
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="29" name="test_b[case 0]" time="0.0009877681732177734"><system-out>0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="29" name="test_b[case 1]" time="0.0007302761077880859"><system-out>1
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="29" name="test_b[case 2]" time="0.0007677078247070312"><system-out>2
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="39" name="test_assert_cases_are_here" time="0.0008907318115234375"></testcase><testcase classname="pytest_cases.tests.advanced.test_memoize_generators" file="pytest_cases/tests/advanced/test_memoize_generators.py" line="46" name="test_assert_parametrized" time="0.0007381439208984375"></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[1.0.0-case_simple]" time="0.0009515285491943359"><system-out>using version 1.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[1.0.0-case_simple2]" time="0.0009393692016601562"><system-out>using version 1.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[1.0.0-gen case i=0, j=0]" time="0.0009453296661376953"><system-out>using version 1.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[1.0.0-gen case i=0, j=1]" time="0.0009412765502929688"><system-out>using version 1.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[1.0.0-gen case i=1, j=0]" time="0.00121307373046875"><system-out>using version 1.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[1.0.0-gen case i=1, j=1]" time="0.0009036064147949219"><system-out>using version 1.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[2.0.0-case_simple]" time="0.0008165836334228516"><system-out>using version 2.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[2.0.0-case_simple2]" time="0.0008242130279541016"><system-out>using version 2.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[2.0.0-gen case i=0, j=0]" time="0.0011763572692871094"><system-out>using version 2.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[2.0.0-gen case i=0, j=1]" time="0.0008938312530517578"><system-out>using version 2.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[2.0.0-gen case i=1, j=0]" time="0.0009217262268066406"><system-out>using version 2.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="41" name="test_with_parameters[2.0.0-gen case i=1, j=1]" time="0.0008857250213623047"><system-out>using version 2.0.0
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_parameters" file="pytest_cases/tests/advanced/test_parameters.py" line="57" name="test_assert_parametrized" time="0.0007090568542480469"></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="22" name="test_with_cases_decorated[case_simple]" time="0.0007975101470947266"></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="35" name="test_with_cases_decorated2[case_simple]" time="0.0007693767547607422"></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="35" name="test_with_cases_decorated2[case_simple2]" time="0.0007774829864501953"></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="83" name="test_a[case_1]" time="0.0008318424224853516"><system-out>loading file file1
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="83" name="test_a[case_2]" time="0.0007948875427246094"><system-out>loading file file2
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="93" name="test_b[case_2]" time="0.0006582736968994141"></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="93" name="test_b[case_3]" time="0.0007460117340087891"><system-out>loading file file3
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="103" name="test_c[case_1]" time="0.0007698535919189453"></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="103" name="test_c[case_2]" time="0.0008096694946289062"></testcase><testcase classname="pytest_cases.tests.advanced.test_stackoverflow" file="pytest_cases/tests/advanced/test_stackoverflow.py" line="103" name="test_c[case_3]" time="0.0008084774017333984"></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_parametrized_cases" file="pytest_cases/tests/advanced/test_suite_parametrized_cases.py" line="61" name="test_suite_parametrized_cases[case_simple-step_check_a]" time="0.0010938644409179688"><system-out>{&apos;b&apos;: 2, &apos;a&apos;: 1}
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_parametrized_cases" file="pytest_cases/tests/advanced/test_suite_parametrized_cases.py" line="61" name="test_suite_parametrized_cases[case_simple-step_check_b]" time="0.00102996826171875"><system-out>{&apos;b&apos;: 2, &apos;a&apos;: 1}
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_parametrized_cases" file="pytest_cases/tests/advanced/test_suite_parametrized_cases.py" line="61" name="test_suite_parametrized_cases[case_simple2-step_check_a]" time="0.0009891986846923828"><system-out>{&apos;b&apos;: 2, &apos;a&apos;: -1}
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_parametrized_cases" file="pytest_cases/tests/advanced/test_suite_parametrized_cases.py" line="61" name="test_suite_parametrized_cases[case_simple2-step_check_b]" time="0.00196075439453125"><system-out>{&apos;b&apos;: 2, &apos;a&apos;: -1}
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_shared_dict_cases" file="pytest_cases/tests/advanced/test_suite_shared_dict_cases.py" line="47" name="test_suite_shared_dict_cases[case_simple-step_check_a]" time="0.000993490219116211"><system-out>{&apos;b&apos;: 2, &apos;a&apos;: 1}
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_shared_dict_cases" file="pytest_cases/tests/advanced/test_suite_shared_dict_cases.py" line="47" name="test_suite_shared_dict_cases[case_simple-step_check_b]" time="0.0008873939514160156"><system-out>{&apos;b&apos;: 2, &apos;a&apos;: 1}
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_shared_dict_cases" file="pytest_cases/tests/advanced/test_suite_shared_dict_cases.py" line="47" name="test_suite_shared_dict_cases[case_simple2-step_check_a]" time="0.0010242462158203125"><system-out>{&apos;b&apos;: 2, &apos;a&apos;: -1}
</system-out></testcase><testcase classname="pytest_cases.tests.advanced.test_suite_shared_dict_cases" file="pytest_cases/tests/advanced/test_suite_shared_dict_cases.py" line="47" name="test_suite_shared_dict_cases[case_simple2-step_check_b]" time="0.0010335445404052734"><system-out>{&apos;b&apos;: 2, &apos;a&apos;: -1}
</system-out></testcase><testcase classname="pytest_cases.tests.intermediate.test_filtering" file="pytest_cases/tests/intermediate/test_filtering.py" line="25" name="test_with_cases_a_or_b[case_a_and_b]" time="0.0008013248443603516"></testcase><testcase classname="pytest_cases.tests.intermediate.test_filtering" file="pytest_cases/tests/intermediate/test_filtering.py" line="25" name="test_with_cases_a_or_b[case_a]" time="0.0007617473602294922"></testcase><testcase classname="pytest_cases.tests.intermediate.test_filtering" file="pytest_cases/tests/intermediate/test_filtering.py" line="38" name="test_with_cases_a_and_b[case_a_and_b]" time="0.0007965564727783203"></testcase><testcase classname="pytest_cases.tests.intermediate.test_shared" file="pytest_cases/tests/intermediate/test_shared.py" line="8" name="test_with_filter[case_for_function1]" time="0.0008172988891601562"></testcase><testcase classname="pytest_cases.tests.intermediate.test_shared" file="pytest_cases/tests/intermediate/test_shared.py" line="8" name="test_with_filter[case_for_function_1_and_2]" time="0.0007798671722412109"></testcase><testcase classname="pytest_cases.tests.intermediate.test_shared" file="pytest_cases/tests/intermediate/test_shared.py" line="21" name="test_with_filter2[case_for_function2]" time="0.0007770061492919922"></testcase><testcase classname="pytest_cases.tests.intermediate.test_shared" file="pytest_cases/tests/intermediate/test_shared.py" line="21" name="test_with_filter2[case_for_function_1_and_2]" time="0.0007593631744384766"></testcase><testcase classname="pytest_cases.tests.intermediate.test_shared" file="pytest_cases/tests/intermediate/test_shared.py" line="34" name="test_with_no_filter_all_cases[case_for_function1]" time="0.0006887912750244141"></testcase><testcase classname="pytest_cases.tests.intermediate.test_shared" file="pytest_cases/tests/intermediate/test_shared.py" line="34" name="test_with_no_filter_all_cases[case_for_function2]" time="0.0006754398345947266"></testcase><testcase classname="pytest_cases.tests.intermediate.test_shared" file="pytest_cases/tests/intermediate/test_shared.py" line="34" name="test_with_no_filter_all_cases[case_for_function_1_and_2]" time="0.0007796287536621094"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_simple]" time="0.0008041858673095703"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[Simplest]" time="0.0007793903350830078"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_simple_error_type]" time="0.0007774829864501953"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_simple_error_instance]" time="0.0007882118225097656"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_simple_error_callable]" time="0.0010671615600585938"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_skipped]" time="0.00026607513427734375"><skipped message="skipped on purpose" type="pytest.skip">pytest_cases/tests/intermediate/test_two_modules.py:6: &lt;py._xmlgen.raw object at 0x7fa57f1bd320&gt;</skipped></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_for_function1]" time="0.0007805824279785156"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_for_function2]" time="0.0007472038269042969"></testcase><testcase classname="pytest_cases.tests.intermediate.test_two_modules" file="pytest_cases/tests/intermediate/test_two_modules.py" line="6" name="test_with_cases_decorated[case_for_function_1_and_2]" time="0.0007572174072265625"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="15" name="test_with_cases_decorated_legacy[case_simple]" time="0.0010027885437011719"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="15" name="test_with_cases_decorated_legacy[Simplest]" time="0.0007040500640869141"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="15" name="test_with_cases_decorated_legacy[case_simple_error_type]" time="0.0008294582366943359"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="15" name="test_with_cases_decorated_legacy[case_simple_error_instance]" time="0.0008764266967773438"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="15" name="test_with_cases_decorated_legacy[case_simple_error_callable]" time="0.0011696815490722656"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="15" name="test_with_cases_decorated_legacy[case_skipped]" time="0.0002830028533935547"><skipped message="skipped on purpose" type="pytest.skip">pytest_cases/tests/simple/test_fixtures.py:15: &lt;py._xmlgen.raw object at 0x7fa57f1fcc50&gt;</skipped></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="62" name="test_with_cases_decorated[case_simple]" time="0.0007789134979248047"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="62" name="test_with_cases_decorated[Simplest]" time="0.0007967948913574219"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="62" name="test_with_cases_decorated[case_simple_error_type]" time="0.00084686279296875"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="62" name="test_with_cases_decorated[case_simple_error_instance]" time="0.0008192062377929688"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="62" name="test_with_cases_decorated[case_simple_error_callable]" time="0.0008122920989990234"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures" file="pytest_cases/tests/simple/test_fixtures.py" line="62" name="test_with_cases_decorated[case_skipped]" time="0.0002422332763671875"><skipped message="skipped on purpose" type="pytest.skip">pytest_cases/tests/simple/test_fixtures.py:62: &lt;py._xmlgen.raw object at 0x7fa57f15f1d0&gt;</skipped></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params" file="pytest_cases/tests/simple/test_fixtures_params.py" line="20" name="test_one[one-one]" time="0.0007956027984619141"><system-out>(&apos;one&apos;, &apos;one&apos;)
</system-out></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params" file="pytest_cases/tests/simple/test_fixtures_params.py" line="20" name="test_one[one-two]" time="0.0007874965667724609"><system-out>(&apos;two&apos;, &apos;one&apos;)
</system-out></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params" file="pytest_cases/tests/simple/test_fixtures_params.py" line="20" name="test_one[two-one]" time="0.0008261203765869141"><system-out>(&apos;one&apos;, &apos;two&apos;)
</system-out></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params" file="pytest_cases/tests/simple/test_fixtures_params.py" line="20" name="test_one[two-two]" time="0.0008530616760253906"><system-out>(&apos;two&apos;, &apos;two&apos;)
</system-out></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params" file="pytest_cases/tests/simple/test_fixtures_params.py" line="49" name="test_two[1-2-a]" time="0.0009760856628417969"><system-out>(1, 2)
</system-out></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params" file="pytest_cases/tests/simple/test_fixtures_params.py" line="49" name="test_two[3-4-a]" time="0.0012259483337402344"><system-out>(3, 4)
</system-out></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params" file="pytest_cases/tests/simple/test_fixtures_params.py" line="49" name="test_two[5-6-a]" time="0.0009229183197021484"><system-out>(5, 6)
</system-out></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params" file="pytest_cases/tests/simple/test_fixtures_params.py" line="54" name="test_synthesis" time="0.002172231674194336"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params_stereo" file="pytest_cases/tests/simple/test_fixtures_params_stereo.py" line="53" name="test_stereo_two_parametrizers[&lt;class &apos;list&apos;&gt;-stereo 1.wav]" time="0.0008172988891601562"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params_stereo" file="pytest_cases/tests/simple/test_fixtures_params_stereo.py" line="53" name="test_stereo_two_parametrizers[&lt;class &apos;list&apos;&gt;-stereo 2.wav]" time="0.0010716915130615234"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params_stereo" file="pytest_cases/tests/simple/test_fixtures_params_stereo.py" line="53" name="test_stereo_two_parametrizers[&lt;class &apos;dict&apos;&gt;-stereo 1.wav]" time="0.0006999969482421875"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params_stereo" file="pytest_cases/tests/simple/test_fixtures_params_stereo.py" line="53" name="test_stereo_two_parametrizers[&lt;class &apos;dict&apos;&gt;-stereo 2.wav]" time="0.0006766319274902344"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params_stereo" file="pytest_cases/tests/simple/test_fixtures_params_stereo.py" line="66" name="test_reference_test[list-stereo 1.wav]" time="0.0008871555328369141"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params_stereo" file="pytest_cases/tests/simple/test_fixtures_params_stereo.py" line="66" name="test_reference_test[list-stereo 2.wav]" time="0.0008451938629150391"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params_stereo" file="pytest_cases/tests/simple/test_fixtures_params_stereo.py" line="66" name="test_reference_test[dict-stereo 1.wav]" time="0.0011637210845947266"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params_stereo" file="pytest_cases/tests/simple/test_fixtures_params_stereo.py" line="66" name="test_reference_test[dict-stereo 2.wav]" time="0.0008361339569091797"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params_stereo" file="pytest_cases/tests/simple/test_fixtures_params_stereo.py" line="101" name="test_stereo_one_global_parametrizer[list-stereo 1.wav]" time="0.0009658336639404297"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params_stereo" file="pytest_cases/tests/simple/test_fixtures_params_stereo.py" line="101" name="test_stereo_one_global_parametrizer[list-stereo 2.wav]" time="0.00047278404235839844"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params_stereo" file="pytest_cases/tests/simple/test_fixtures_params_stereo.py" line="101" name="test_stereo_one_global_parametrizer[dict-stereo 1.wav]" time="0.00046181678771972656"></testcase><testcase classname="pytest_cases.tests.simple.test_fixtures_params_stereo" file="pytest_cases/tests/simple/test_fixtures_params_stereo.py" line="101" name="test_stereo_one_global_parametrizer[dict-stereo 2.wav]" time="0.0016396045684814453"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[case_simple]" time="0.0007724761962890625"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=0, j=0 and name template]" time="0.0007634162902832031"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=0, j=1 and name template]" time="0.0006661415100097656"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=0, j=2 and name template]" time="0.0007030963897705078"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=1, j=0 and name template]" time="0.0008070468902587891"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=1, j=1 and name template]" time="0.0007750988006591797"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=1, j=2 and name template]" time="0.0007765293121337891"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=0, j=0 and names callable provider]" time="0.0007867813110351562"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=0, j=1 and names callable provider]" time="0.0007662773132324219"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=0, j=2 and names callable provider]" time="0.0011119842529296875"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=1, j=0 and names callable provider]" time="0.0007584095001220703"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=1, j=1 and names callable provider]" time="0.0007476806640625"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=1, j=2 and names callable provider]" time="0.0008351802825927734"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=0, j=0 and explicit names list]" time="0.0006978511810302734"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=0, j=1 and explicit names list]" time="0.0006792545318603516"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=0, j=2 and explicit names list]" time="0.0006723403930664062"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=1, j=0 and explicit names list]" time="0.0007679462432861328"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=1, j=1 and explicit names list]" time="0.0007936954498291016"></testcase><testcase classname="pytest_cases.tests.simple.test_generators" file="pytest_cases/tests/simple/test_generators.py" line="52" name="test_with_cases_decorated[test with i=1, j=2 and explicit names list]" time="0.0007960796356201172"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="8" name="test_with_cases_decorated[case_simple]" time="0.0008451938629150391"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="8" name="test_with_cases_decorated[Simplest]" time="0.0007619857788085938"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="8" name="test_with_cases_decorated[case_simple_error_type]" time="0.0008559226989746094"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="8" name="test_with_cases_decorated[case_simple_error_instance]" time="0.0008573532104492188"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="8" name="test_with_cases_decorated[case_simple_error_callable]" time="0.0011494159698486328"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="8" name="test_with_cases_decorated[case_skipped]" time="0.0002663135528564453"><skipped message="skipped on purpose" type="pytest.skip">pytest_cases/tests/simple/test_main.py:8: &lt;py._xmlgen.raw object at 0x7fa57f18c4e0&gt;</skipped></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="46" name="test_with_cases_manual[case_simple]" time="0.0007176399230957031"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="46" name="test_with_cases_manual[Simplest]" time="0.0006761550903320312"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="46" name="test_with_cases_manual[case_simple_error_type]" time="0.0008053779602050781"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="46" name="test_with_cases_manual[case_simple_error_instance]" time="0.0007207393646240234"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="46" name="test_with_cases_manual[case_simple_error_callable]" time="0.0004703998565673828"></testcase><testcase classname="pytest_cases.tests.simple.test_main" file="pytest_cases/tests/simple/test_main.py" line="46" name="test_with_cases_manual[case_skipped]" time="0.00019979476928710938"><skipped message="skipped on purpose" type="pytest.skip">pytest_cases/tests/simple/test_main.py:46: &lt;py._xmlgen.raw object at 0x7fa57f1949b0&gt;</skipped></testcase><testcase classname="pytest_cases.tests.simple.test_pytest_marks" file="pytest_cases/tests/simple/test_pytest_marks.py" line="11" name="test_get_pytest_marks" time="0.0009064674377441406"></testcase><testcase classname="pytest_cases.tests.simple.test_same_file" file="pytest_cases/tests/simple/test_same_file.py" line="23" name="test_with_cases_decorated[case_simple]" time="0.001135110855102539"></testcase><testcase classname="pytest_cases.tests.simple.test_same_file" file="pytest_cases/tests/simple/test_same_file.py" line="23" name="test_with_cases_decorated[case_simple2]" time="0.0010890960693359375"></testcase></testsuite>